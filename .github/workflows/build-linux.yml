name: Build Linux Executable

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出你的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 安装 Vcpkg 并构建依赖
      # 这是修正后的关键步骤，使用了最新的 run-vcpkg Action
      # 它会自动定位 vcpkg.json 文件并安装所有依赖
      - name: Install C++ dependencies with vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # vcpkgJsonGlob: 'vcpkg.json' # 这是默认值，可以不写
          # vcpkgGitCommitId: '...' # 如果需要锁定vcpkg版本，可以在这里指定commit id
          # runVcpkgInstall: true # 默认就是true, 会自动运行安装命令

      # 步骤 3: 配置 CMake
      # run-vcpkg 会自动设置 VCPKG_ROOT 环境变量，我们可以直接使用
      - name: Configure CMake
        run: >
          cmake -B build -S .
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

      # 步骤 4: 构建项目
      - name: Build the project
        run: cmake --build build --config Release -j $(nproc)

      # 步骤 5: 上传构建产物
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: build/Netease_sensitive_word
